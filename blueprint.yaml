tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/6.3.1/types.yaml
  - plugin:cloudify-openstack-plugin?version=>3.0

inputs:
  image_id:
    type: string

  security_group:
    type: string

  public_net:
    type: string

  sub_net:
    type: string

  keypair:
    type: string

  flavor_id:
    type: string

  server_name:
    type: string

  openstack_auth_url:
    type: string
    default: { get_secret: openstack_auth_url }

  openstack_username:
    type: string
    default: { get_secret: openstack_username }

  openstack_password:
    type: string
    default: { get_secret: openstack_password }

  openstack_project_name:
    type: string
    default: { get_secret: openstack_project_name }

  openstack_tenant_name:
    type: string
    default: { get_secret: openstack_tenant_name }

  openstack_region:
    type: string
    default: { get_secret: openstack_region }

  openstack_user_domain_name:
    type: string
    default: { get_secret: openstack_user_domain_name }

  openstack_project_domain_name:
    type: string
    default: { get_secret: openstack_project_domain_name }


dsl_definitions:

  client_config: &client_config
    auth_url: { get_input: openstack_auth_url }
    username: { get_input: openstack_username }
    password: { get_input: openstack_password }
    project_name: { get_input: openstack_project_name }
    tenant_name: { get_input: openstack_tenant_name }
    region_name: { get_input: openstack_region }
    user_domain_name: { get_input: openstack_user_domain_name }
    project_domain_name: { get_input: openstack_project_domain_name }


node_templates:

  key_pair:
    type: cloudify.nodes.openstack.KeyPair
    properties:
      use_external_resource: True
      client_config: *client_config
      resource_config:
        name: { get_input: keypair}

  public_net:
    type: cloudify.nodes.openstack.Network
    properties:
      use_external_resource: True
      client_config: *client_config
      resource_config:
        name: { get_input: public_net }

  sub_net:
    type: cloudify.nodes.openstack.Subnet
    properties:
      use_external_resource: True
      client_config: *client_config
      resource_config:
        name: { get_input: sub_net }

  security_group:
    type: cloudify.nodes.openstack.SecurityGroup
    properties:
      use_external_resource: True
      client_config: *client_config
      resource_config:
        name: { get_input: security_group }

  port:
    type: cloudify.nodes.openstack.Port
    properties:
      client_config: *client_config
      resource_config:
        fixed_ips:
          - subnet_id: { get_attribute: [ sub_net, id ] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: security_group
      - type: cloudify.relationships.depends_on
        target: sub_net
      - type: cloudify.relationships.contained_in
        target: public_net

  host:
    type: cloudify.nodes.openstack.Server
    properties:
      client_config: *client_config
      agent_config:
        install_method: none
      resource_config:
        name: { concat: [ { get_input: server_name } ] }
        image_id: { get_input: image_id }
        flavor_id: { get_input: flavor_id }
    relationships:
      - type: cloudify.relationships.openstack.server_connected_to_port
        target: port
      - type: cloudify.relationships.openstack.server_connected_to_security_group
        target: security_group
      - type: cloudify.relationships.openstack.server_connected_to_keypair
        target: key_pair

capabilities:
    host:
        description: ip of the host
        value:
            ip: { get_attribute: [host, ip] }
